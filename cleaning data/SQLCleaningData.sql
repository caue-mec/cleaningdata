-- CLEANING DATA IN SQL QUERIES



SELECT *
FROM NASHVILLEHOUSING
where ParcelID ='026 06 0A 038.00'

-- STANDARDIZE DATE FORMAT

SELECT SALEDATEFORMAT, CONVERT(DATE,SALEDATE)  
FROM NASHVILLEHOUSING

--UPDATE NASHVILLEHOUSING
--SET SALEDATE = CONVERT(DATE,SALEDATE) IT DIDNT'T WORK SO I HAVE TO CREATE A NEW COLUNM 'SALEDATEFORMAT' 
--AND FILL IT WITH THE CONVERTED SALEDATE

ALTER TABLE NASHVILLEHOUSING
ADD SALEDATEFORMAT DATE;

UPDATE NASHVILLEHOUSING
SET SALEDATEFORMAT = CONVERT(DATE,SALEDATE)

----------------------------------------------------------------------------------------------------------------

--POPULATE PROPERTY ADDRESS DATA BY PARCELID MUTUAL VALUES AND FILL THE NULL CELLS WITH THEN

SELECT  nh1.ParcelID, nh1.PropertyAddress , nh2.ParcelID, nh2.PropertyAddress, ISNULL(nh1.PropertyAddress,nh2.PropertyAddress)
FROM NASHVILLEHOUSING nh1
JOIN NASHVILLEHOUSING nh2 
	ON nh1.ParcelID = nh2.ParcelID
	AND nh1.UniqueID <> nh2.UniqueID
where nh1.PropertyAddress is null


UPDATE nh1
SET PropertyAddress = ISNULL(nh1.PropertyAddress,nh2.PropertyAddress)
FROM NASHVILLEHOUSING nh1
JOIN NASHVILLEHOUSING nh2 
	ON nh1.ParcelID = nh2.ParcelID
	AND nh1.UniqueID <> nh2.UniqueID


	-----------------------------------------------------------------------------------------------------------


-- BREAKING OUT PROPERTYADDRESS INTO INDIVIDUAL COLUNMS (ADDRESS, CITY , STATE) USING SUBSTRING

SELECT PROP_ADDRESS
FROM NASHVILLEHOUSING
WHERE PROP_ADDRESS LIKE '%ALTA%'

SELECT 
SUBSTRING(PROPERTYADDRESS, 1, CHARINDEX(',',PROPERTYADDRESS)-1) AS P_ADDRESS,
SUBSTRING(PROPERTYADDRESS, CHARINDEX(',',PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS)) P_CITY

FROM NASHVILLEHOUSING


ALTER TABLE NASHVILLEHOUSING
ADD PROP_ADDRESS VARCHAR(255);
UPDATE NASHVILLEHOUSING
SET PROP_ADDRESS = SUBSTRING(PROPERTYADDRESS, 1, CHARINDEX(',',PROPERTYADDRESS)-1)

ALTER TABLE NASHVILLEHOUSING
ADD PROP_CITY VARCHAR(255);
UPDATE NASHVILLEHOUSING
SET PROP_CITY = SUBSTRING(PROPERTYADDRESS, CHARINDEX(',',PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS))


-----------------------------------------------------------------------------------------------------------


-- BREAKING OUT OWNERADDRESS INTO INDIVIDUAL COLUNMS (ADDRESS, CITY , STATE) USING PARSENAME

SELECT
PARSENAME(REPLACE(OwnerAddress,',','.'),3),
PARSENAME(REPLACE(OwnerAddress,',','.'),2),
PARSENAME(REPLACE(OwnerAddress,',','.'),1)
FROM NASHVILLEHOUSING

ALTER TABLE NASHVILLEHOUSING
ADD Owner_Address VARCHAR(255);
UPDATE NASHVILLEHOUSING
SET Owner_Address = PARSENAME(REPLACE(OwnerAddress,',','.'),3)

ALTER TABLE NASHVILLEHOUSING
ADD Owner_City VARCHAR(255);
UPDATE NASHVILLEHOUSING
SET Owner_City = PARSENAME(REPLACE(OwnerAddress,',','.'),2)

ALTER TABLE NASHVILLEHOUSING
ADD Owner_State VARCHAR(255);
UPDATE NASHVILLEHOUSING
SET Owner_State = PARSENAME(REPLACE(OwnerAddress,',','.'),1)


-----------------------------------------------------------------------------------------------------

-- CHANGE THE VALUES Y AND N TO YES AND NO IN SOLDASVACANT FIELD 

SELECT DISTINCT(SoldAsVacant) , COUNT(SoldAsVacant)OVER(PARTITION BY SoldAsVacant)
FROM NASHVILLEHOUSING
ORDER BY 2

 -- THE FIELD HAVE DIFFERENT VALUES BUT ITS MEANING IS THE SAME


 SELECT SoldAsVacant,
	CASE 
		WHEN SoldAsVacant = 'Y' THEN 'YES'
		WHEN SoldAsVacant = 'N' THEN 'NO'
		ELSE SoldAsVacant
	END
FROM NASHVILLEHOUSING

UPDATE NASHVILLEHOUSING
SET SoldAsVacant =
	CASE 
		WHEN SoldAsVacant = 'Y' THEN 'YES'
		WHEN SoldAsVacant = 'N' THEN 'NO'
		ELSE SoldAsVacant
	END

-----------------------------------------------------------------------------------------------------------

-- REMOVE DUPLICATES

WITH RowNumCTE As (
SELECT *,
	ROW_NUMBER()OVER(PARTITION BY
					ParcelID,
					LandUse,
					PropertyAddress,
					SaleDate,
					SalePrice,
					LegalReference
					ORDER BY 
						UniqueID
					) Row_num
FROM NASHVILLEHOUSING
--ORDER BY ParcelID
)

--SELECT*
--FROM RowNumCTE
--WHERE Row_num > 1

DELETE
FROM RowNumCTE
WHERE Row_num > 1


--DELETE UNSUSED COLUMNS


SELECT*
FROM NASHVILLEHOUSING

ALTER TABLE NASHVILLEHOUSING
DROP COLUMN SaleDate, PropertyAddress, OwnerAddress